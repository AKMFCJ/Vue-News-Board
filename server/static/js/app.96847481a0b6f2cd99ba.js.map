{"version":3,"sources":["webpack:///static/js/app.96847481a0b6f2cd99ba.js","webpack:///./src/main.js","webpack:////home/ioiogoo/~/.2.1.1@vuex/dist/vuex.js","webpack:///./src/App.vue","webpack:///./src/App.vue?63a6","webpack:///App.vue"],"names":["webpackJsonp","module","exports","__webpack_require__","_interopRequireDefault","obj","__esModule","default","_vue","_vue2","_App","_App2","_vuex","_vuex2","use","store","Store","state","news","mutations","getNews","actions","context","cat","fetch","name","then","data","commit","el","template","components","App","global","factory","this","devtoolPlugin","devtoolHook","_devtoolHook","emit","on","targetState","replaceState","subscribe","mutation","applyMixin","Vue","vuexInit","options","$options","$store","parent","version","Number","split","usesInit","config","_lifecycleHooks","indexOf","mixin","init","beforeCreate","_init","prototype","concat","call","normalizeMap","map","Array","isArray","key","val","Object","keys","normalizeNamespace","fn","namespace","charAt","length","warnNamespace","helper","console","error","forEachValue","forEach","isObject","isPromise","assert","condition","msg","Error","update","targetModule","newModule","modules","getChild","warn","resetStore","_actions","create","_mutations","_wrappedGetters","_modulesNamespaceMap","installModule","_modules","root","resetStoreVM","oldVm","_vm","getters","wrappedGetters","computed","defineProperty","get","enumerable","silent","strict","enableStrictMode","_withCommit","nextTick","$destroy","rootState","path","hot","isRoot","getNamespace","parentState","getNestedState","slice","moduleName","set","local","makeLocalContext","forEachMutation","namespacedType","registerMutation","forEachAction","action","registerAction","forEachGetter","getter","registerGetter","forEachChild","child","noNamespace","dispatch","_type","_payload","_options","args","unifyObjectStyle","payload","type","makeLocalGetters","gettersProxy","splitPos","localType","handler","entry","push","cb","res","rootGetters","Promise","resolve","catch","err","rawGetter","$watch","_committing","deep","sync","reduce","install","_Vue","window","__VUE_DEVTOOLS_GLOBAL_HOOK__","mapState","states","ref","mapMutations","len","arguments","apply","mapGetters","mapActions","Module","rawModule","runtime","_children","_rawModule","prototypeAccessors$1","namespaced","addChild","removeChild","defineProperties","ModuleCollection","rawRootModule","this$1","register","rawChildModule","unregister","plugins","_subscribers","_watcherVM","plugin","prototypeAccessors","$data","v","sub","all","subs","i","splice","watch","registerModule","unregisterModule","delete","hotUpdate","newOptions","committing","index","__vue_exports__","__vue_options__","__vue_template__","render","staticRenderFns","_h","$createElement","_c","_self","attrs","id","_v","_l","n","_s","title","click","change","value","methods"],"mappings":"AAAAA,cAAc,EAAE,IAEV,SAASC,EAAQC,EAASC,GAE/B,YAcA,SAASC,GAAuBC,GAAO,MAAOA,IAAOA,EAAIC,WAAaD,GAAQE,QAASF,GChBxF,GAAAG,GAAAL,EAAA,GDMKM,EAAQL,EAAuBI,GCLpCE,EAAAP,EAAA,GDSKQ,EAAQP,EAAuBM,GCRpCE,EAAAT,EAAA,GDYKU,EAAST,EAAuBQ,ECVrCH,GAAAF,QAAIO,IAAJD,EAAAN,QAEA,IAAMQ,GAAQ,GAAIF,GAAAN,QAAKS,OACtBC,OACCC,SAEDC,WACCC,QADU,SACDH,EAAOC,GACfD,EAAMC,KAAOA,EAAKA,OAGpBG,SACCD,QADQ,SACCE,EAASC,GACjBC,MAAM,oBAAqBD,EAAIE,MAAMC,KAAK,SAASC,GAAOL,EAAQM,OAAO,WAAYV,KAAQS,EAAA,YAKhG,IAAAlB,GAAAF,SACEsB,GAAI,OACJd,QACAe,SAAU,SACVC,YAAcC,kBDqBV,SAAS/B,EAAQC,EAASC;;;;;CE5ChC,SAAA8B,EAAAC,GACAjC,EAAAC,QAAAgC,KAGCC,KAAA,WAAqB,YAMtB,SAAAC,GAAArB,GACAsB,IAEAtB,EAAAuB,aAAAD,EAEAA,EAAAE,KAAA,YAAAxB,GAEAsB,EAAAG,GAAA,gCAAAC,GACA1B,EAAA2B,aAAAD,KAGA1B,EAAA4B,UAAA,SAAAC,EAAA3B,GACAoB,EAAAE,KAAA,gBAAAK,EAAA3B,MAIA,QAAA4B,GAAAC,GAwBA,QAAAC,KACA,GAAAC,GAAAb,KAAAc,QAEAD,GAAAjC,MACAoB,KAAAe,OAAAF,EAAAjC,MACKiC,EAAAG,QAAAH,EAAAG,OAAAD,SACLf,KAAAe,OAAAF,EAAAG,OAAAD,QA7BA,GAAAE,GAAAC,OAAAP,EAAAM,QAAAE,MAAA,QAEA,IAAAF,GAAA,GACA,GAAAG,GAAAT,EAAAU,OAAAC,gBAAAC,QAAA,UACAZ,GAAAa,MAAAJ,GAA0BK,KAAAb,IAAqBc,aAAAd,QAC5C,CAGH,GAAAe,GAAAhB,EAAAiB,UAAAD,KACAhB,GAAAiB,UAAAD,MAAA,SAAAd,GACA,SAAAA,UAEAA,EAAAY,KAAAZ,EAAAY,MACAb,GAAAiB,OAAAhB,EAAAY,MACAb,EACAe,EAAAG,KAAA9B,KAAAa,KAgGA,QAAAkB,GAAAC,GACA,MAAAC,OAAAC,QAAAF,GACAA,MAAA,SAAAG,GAA8B,OAAUA,MAAAC,IAAAD,KACxCE,OAAAC,KAAAN,OAAA,SAAAG,GAA2C,OAAUA,MAAAC,IAAAJ,EAAAG,MAGrD,QAAAI,GAAAC,GACA,gBAAAC,EAAAT,GAOA,MANA,gBAAAS,IACAT,EAAAS,EACAA,EAAA,IACK,MAAAA,EAAAC,OAAAD,EAAAE,OAAA,KACLF,GAAA,KAEAD,EAAAC,EAAAT,IAIA,QAAAY,GAAAC,EAAAJ,GACAK,QAAAC,MAAA,wCAAAF,EAAA,OAAAJ,GAMA,QAAAO,GAAA9E,EAAAsE,GACAH,OAAAC,KAAApE,GAAA+E,QAAA,SAAAd,GAA2C,MAAAK,GAAAtE,EAAAiE,QAG3C,QAAAe,GAAAhF,GACA,cAAAA,GAAA,gBAAAA,GAGA,QAAAiF,GAAAf,GACA,MAAAA,IAAA,kBAAAA,GAAA7C,KAGA,QAAA6D,GAAAC,EAAAC,GACA,IAAAD,EAAmB,SAAAE,OAAA,UAAAD,GA4HnB,QAAAE,GAAAC,EAAAC,GAKA,GAHAD,EAAAD,OAAAE,GAGAA,EAAAC,QACA,OAAAxB,KAAAuB,GAAAC,QAAA,CACA,IAAAF,EAAAG,SAAAzB,GAKA,WAJAW,SAAAe,KACA,sCAAA1B,EAAA,8CAKAqB,GAAAC,EAAAG,SAAAzB,GAAAuB,EAAAC,QAAAxB,KAgLA,QAAA2B,GAAAlF,GACAA,EAAAmF,SAAA1B,OAAA2B,OAAA,MACApF,EAAAqF,WAAA5B,OAAA2B,OAAA,MACApF,EAAAsF,gBAAA7B,OAAA2B,OAAA,MACApF,EAAAuF,qBAAA9B,OAAA2B,OAAA,KACA,IAAAlF,GAAAF,EAAAE,KAEAsF,GAAAxF,EAAAE,KAAAF,EAAAyF,SAAAC,MAAA,GAEAC,EAAA3F,EAAAE,GAGA,QAAAyF,GAAA3F,EAAAE,GACA,GAAA0F,GAAA5F,EAAA6F,GAGA7F,GAAA8F,UACA,IAAAC,GAAA/F,EAAAsF,gBACAU,IACA5B,GAAA2B,EAAA,SAAAnC,EAAAL,GAEAyC,EAAAzC,GAAA,WAAiC,MAAAK,GAAA5D,IACjCyD,OAAAwC,eAAAjG,EAAA8F,QAAAvC,GACA2C,IAAA,WAAwB,MAAAlG,GAAA6F,IAAAtC,IACxB4C,YAAA,KAOA,IAAAC,GAAArE,EAAAU,OAAA2D,MACArE,GAAAU,OAAA2D,QAAA,EACApG,EAAA6F,IAAA,GAAA9D,IACAnB,MAAWV,SACX8F,aAEAjE,EAAAU,OAAA2D,SAGApG,EAAAqG,QACAC,EAAAtG,GAGA4F,IAGA5F,EAAAuG,YAAA,WACAX,EAAA1F,MAAA,OAEA6B,EAAAyE,SAAA,WAA8B,MAAAZ,GAAAa,cAI9B,QAAAjB,GAAAxF,EAAA0G,EAAAC,EAAAzH,EAAA0H,GACA,GAAAC,IAAAF,EAAA5C,OACAF,EAAA7D,EAAAyF,SAAAqB,aAAAH,EAQA,IALA9C,IACA7D,EAAAuF,qBAAA1B,GAAA3E,IAIA2H,IAAAD,EAAA,CACA,GAAAG,GAAAC,EAAAN,EAAAC,EAAAM,MAAA,OACAC,EAAAP,IAAA5C,OAAA,EACA/D,GAAAuG,YAAA,WACAxE,EAAAoF,IAAAJ,EAAAG,EAAAhI,EAAAgB,SAIA,GAAAkH,GAAAlI,EAAAqB,QAAA8G,EAAArH,EAAA6D,EAEA3E,GAAAoI,gBAAA,SAAAzF,EAAA0B,GACA,GAAAgE,GAAA1D,EAAAN,CACAiE,GAAAxH,EAAAuH,EAAA1F,EAAA8E,KAGAzH,EAAAuI,cAAA,SAAAC,EAAAnE,GACA,GAAAgE,GAAA1D,EAAAN,CACAoE,GAAA3H,EAAAuH,EAAAG,EAAAN,EAAAT,KAGAzH,EAAA0I,cAAA,SAAAC,EAAAtE,GACA,GAAAgE,GAAA1D,EAAAN,CACAuE,GAAA9H,EAAAuH,EAAAM,EAAAT,EAAAT,KAGAzH,EAAA6I,aAAA,SAAAC,EAAAzE,GACAiC,EAAAxF,EAAA0G,EAAAC,EAAA1D,OAAAM,GAAAyE,EAAApB,KAQA,QAAAS,GAAArH,EAAA6D,GACA,GAAAoE,GAAA,KAAApE,EAEAuD,GACAc,SAAAD,EAAAjI,EAAAkI,SAAA,SAAAC,EAAAC,EAAAC,GACA,GAAAC,GAAAC,EAAAJ,EAAAC,EAAAC,GACAG,EAAAF,EAAAE,QACAvG,EAAAqG,EAAArG,QACAwG,EAAAH,EAAAG,IAEA,OAAAxG,MAAAyD,OACA+C,EAAA5E,EAAA4E,EACAzI,EAAAmF,SAAAsD,IAMAzI,EAAAkI,SAAAO,EAAAD,OALAtE,SAAAC,MAAA,qCAAAmE,EAAA,uBAAAG,IAQA5H,OAAAoH,EAAAjI,EAAAa,OAAA,SAAAsH,EAAAC,EAAAC,GACA,GAAAC,GAAAC,EAAAJ,EAAAC,EAAAC,GACAG,EAAAF,EAAAE,QACAvG,EAAAqG,EAAArG,QACAwG,EAAAH,EAAAG,IAEA,OAAAxG,MAAAyD,OACA+C,EAAA5E,EAAA4E,EACAzI,EAAAqF,WAAAoD,QAMAzI,GAAAa,OAAA4H,EAAAD,EAAAvG,OALAiC,SAAAC,MAAA,uCAAAmE,EAAA,uBAAAG,IAeA,OAJAhF,QAAAwC,eAAAmB,EAAA,WACAlB,IAAA+B,EAAA,WAAoC,MAAAjI,GAAA8F,SAAwB,WAAgB,MAAA4C,GAAA1I,EAAA6D,MAG5EuD,EAGA,QAAAsB,GAAA1I,EAAA6D,GACA,GAAA8E,MAEAC,EAAA/E,EAAAE,MAiBA,OAhBAN,QAAAC,KAAA1D,EAAA8F,SAAAzB,QAAA,SAAAoE,GAEA,GAAAA,EAAAxB,MAAA,EAAA2B,KAAA/E,EAAA,CAGA,GAAAgF,GAAAJ,EAAAxB,MAAA2B,EAKAnF,QAAAwC,eAAA0C,EAAAE,GACA3C,IAAA,WAAwB,MAAAlG,GAAA8F,QAAA2C,IACxBtC,YAAA,OAIAwC,EAGA,QAAAnB,GAAAxH,EAAAyI,EAAAK,EAAAnC,GACA,GAAAoC,GAAA/I,EAAAqF,WAAAoD,KAAAzI,EAAAqF,WAAAoD,MACAM,GAAAC,KAAA,SAAAR,GACAM,EAAA9B,EAAAhH,EAAAE,MAAAyG,GAAA6B,KAIA,QAAAb,GAAA3H,EAAAyI,EAAAK,EAAA1B,EAAAT,GACA,GAAAoC,GAAA/I,EAAAmF,SAAAsD,KAAAzI,EAAAmF,SAAAsD,MACAM,GAAAC,KAAA,SAAAR,EAAAS,GACA,GAAAC,GAAAJ,GACAZ,SAAAd,EAAAc,SACArH,OAAAuG,EAAAvG,OACAiF,QAAAsB,EAAAtB,QACA5F,MAAA8G,EAAAhH,EAAAE,MAAAyG,GACAwC,YAAAnJ,EAAA8F,QACAY,UAAA1G,EAAAE,OACKsI,EAAAS,EAIL,OAHA1E,GAAA2E,KACAA,EAAAE,QAAAC,QAAAH,IAEAlJ,EAAAuB,aACA2H,EAAAI,MAAA,SAAAC,GAEA,KADAvJ,GAAAuB,aAAAC,KAAA,aAAA+H,GACAA,IAGAL,IAKA,QAAApB,GAAA9H,EAAAyI,EAAAe,EAAApC,EAAAT,GACA,MAAA3G,GAAAsF,gBAAAmD,OACAvE,SAAAC,MAAA,gCAAAsE,QAGAzI,EAAAsF,gBAAAmD,GAAA,SAAAzI,GACA,MAAAwJ,GACAxC,EAAAhH,EAAAE,MAAAyG,GACAS,EAAAtB,QACA9F,EAAAE,MACAF,EAAA8F,WAKA,QAAAQ,GAAAtG,GACAA,EAAA6F,IAAA4D,OAAA,mBACAjF,EAAAxE,EAAA0J,YAAA,+DACMC,MAAA,EAAAC,MAAA,IAGN,QAAA5C,GAAA9G,EAAAyG,GACA,MAAAA,GAAA5C,OACA4C,EAAAkD,OAAA,SAAA3J,EAAAqD,GAAyC,MAAArD,GAAAqD,IAAqBrD,GAC9DA,EAGA,QAAAqI,GAAAE,EAAAD,EAAAvG,GAMA,MALAqC,GAAAmE,aACAxG,EAAAuG,EACAA,EAAAC,EACAA,WAEUA,OAAAD,UAAAvG,WAGV,QAAA6H,GAAAC,GACA,MAAAhI,OACAmC,SAAAC,MACA,wEAIApC,EAAAgI,MACAjI,GAAAC,IAztBA,GAAAT,GACA,mBAAA0I,SACAA,OAAAC,6BAqDAC,EAAAvG,EAAA,SAAAE,EAAAsG,GACA,GAAAjB,KAsBA,OArBA/F,GAAAgH,GAAA9F,QAAA,SAAA+F,GACA,GAAA7G,GAAA6G,EAAA7G,IACAC,EAAA4G,EAAA5G,GAEA0F,GAAA3F,GAAA,WACA,GAAArD,GAAAkB,KAAAe,OAAAjC,MACA4F,EAAA1E,KAAAe,OAAA2D,OACA,IAAAjC,EAAA,CACA,GAAA3E,GAAAkC,KAAAe,OAAAoD,qBAAA1B,EACA,KAAA3E,EAEA,WADA8E,GAAA,WAAAH,EAGA3D,GAAAhB,EAAAgB,MACA4F,EAAA5G,EAAAqB,QAAAuF,QAEA,wBAAAtC,GACAA,EAAAN,KAAA9B,KAAAlB,EAAA4F,GACA5F,EAAAsD,MAGA0F,IAGAmB,EAAA1G,EAAA,SAAAE,EAAAzD,GACA,GAAA8I,KAaA,OAZA/F,GAAA/C,GAAAiE,QAAA,SAAA+F,GACA,GAAA7G,GAAA6G,EAAA7G,IACAC,EAAA4G,EAAA5G,GAEAA,GAAAK,EAAAL,EACA0F,EAAA3F,GAAA,WAEA,IADA,GAAA+E,MAAAgC,EAAAC,UAAAxG,OACAuG,KAAAhC,EAAAgC,GAAAC,UAAAD,EAEA,OAAAlJ,MAAAe,OAAAtB,OAAA2J,MAAApJ,KAAAe,QAAAqB,GAAAP,OAAAqF,OAGAY,IAGAuB,EAAA9G,EAAA,SAAAE,EAAAiC,GACA,GAAAoD,KAaA,OAZA/F,GAAA2C,GAAAzB,QAAA,SAAA+F,GACA,GAAA7G,GAAA6G,EAAA7G,IACAC,EAAA4G,EAAA5G,GAEAA,GAAAK,EAAAL,EACA0F,EAAA3F,GAAA,WAIA,MAHAC,KAAApC,MAAAe,OAAA2D,SACA5B,QAAAC,MAAA,0BAAAX,GAEApC,KAAAe,OAAA2D,QAAAtC,MAGA0F,IAGAwB,EAAA/G,EAAA,SAAAE,EAAAvD,GACA,GAAA4I,KAaA,OAZA/F,GAAA7C,GAAA+D,QAAA,SAAA+F,GACA,GAAA7G,GAAA6G,EAAA7G,IACAC,EAAA4G,EAAA5G,GAEAA,GAAAK,EAAAL,EACA0F,EAAA3F,GAAA,WAEA,IADA,GAAA+E,MAAAgC,EAAAC,UAAAxG,OACAuG,KAAAhC,EAAAgC,GAAAC,UAAAD,EAEA,OAAAlJ,MAAAe,OAAA+F,SAAAsC,MAAApJ,KAAAe,QAAAqB,GAAAP,OAAAqF,OAGAY,IA4CAyB,EAAA,SAAAC,EAAAC,GACAzJ,KAAAyJ,UACAzJ,KAAA0J,UAAArH,OAAA2B,OAAA,MACAhE,KAAA2J,WAAAH,GAGAI,GAA4B9K,SAAU+K,cAEtCD,GAAA9K,MAAAgG,IAAA,WACA,MAAA9E,MAAA2J,WAAA7K,WAGA8K,EAAAC,WAAA/E,IAAA,WACA,QAAA9E,KAAA2J,WAAAE,YAGAN,EAAA3H,UAAAkI,SAAA,SAAA3H,EAAArE,GACAkC,KAAA0J,UAAAvH,GAAArE,GAGAyL,EAAA3H,UAAAmI,YAAA,SAAA5H,SACAnC,MAAA0J,UAAAvH,IAGAoH,EAAA3H,UAAAgC,SAAA,SAAAzB,GACA,MAAAnC,MAAA0J,UAAAvH,IAGAoH,EAAA3H,UAAA4B,OAAA,SAAAgG,GACAxJ,KAAA2J,WAAAE,WAAAL,EAAAK,WACAL,EAAAtK,UACAc,KAAA2J,WAAAzK,QAAAsK,EAAAtK,SAEAsK,EAAAxK,YACAgB,KAAA2J,WAAA3K,UAAAwK,EAAAxK,WAEAwK,EAAA9E,UACA1E,KAAA2J,WAAAjF,QAAA8E,EAAA9E,UAIA6E,EAAA3H,UAAA+E,aAAA,SAAAnE,GACAQ,EAAAhD,KAAA0J,UAAAlH,IAGA+G,EAAA3H,UAAA4E,cAAA,SAAAhE,GACAxC,KAAA2J,WAAAjF,SACA1B,EAAAhD,KAAA2J,WAAAjF,QAAAlC,IAIA+G,EAAA3H,UAAAyE,cAAA,SAAA7D,GACAxC,KAAA2J,WAAAzK,SACA8D,EAAAhD,KAAA2J,WAAAzK,QAAAsD,IAIA+G,EAAA3H,UAAAsE,gBAAA,SAAA1D,GACAxC,KAAA2J,WAAA3K,WACAgE,EAAAhD,KAAA2J,WAAA3K,UAAAwD,IAIAH,OAAA2H,iBAAAT,EAAA3H,UAAAgI,EAEA,IAAAK,GAAA,SAAAC,GACA,GAAAC,GAAAnK,IAGAA,MAAAsE,KAAA,GAAAiF,GAAAW,GAAA,GAGAA,EAAAvG,SACAX,EAAAkH,EAAAvG,QAAA,SAAA6F,EAAArH,GACAgI,EAAAC,UAAAjI,GAAAqH,GAAA,KAKAS,GAAArI,UAAAkD,IAAA,SAAAS,GACA,MAAAA,GAAAkD,OAAA,SAAA3K,EAAAqE,GACA,MAAArE,GAAA8F,SAAAzB,IACGnC,KAAAsE,OAGH2F,EAAArI,UAAA8D,aAAA,SAAAH,GACA,GAAAzH,GAAAkC,KAAAsE,IACA,OAAAiB,GAAAkD,OAAA,SAAAhG,EAAAN,GAEA,MADArE,KAAA8F,SAAAzB,GACAM,GAAA3E,EAAA+L,WAAA1H,EAAA,SACG,KAGH8H,EAAArI,UAAA4B,OAAA,SAAA0G,GACA1G,EAAAxD,KAAAsE,KAAA4F,IAGAD,EAAArI,UAAAwI,SAAA,SAAA7E,EAAAiE,EAAAC,GACA,GAAAU,GAAAnK,IACA,UAAAyJ,OAAA,EAEA,IAAAzI,GAAAhB,KAAA8E,IAAAS,EAAAM,MAAA,OACAnC,EAAA,GAAA6F,GAAAC,EAAAC,EACAzI,GAAA8I,SAAAvE,IAAA5C,OAAA,GAAAe,GAGA8F,EAAA7F,SACAX,EAAAwG,EAAA7F,QAAA,SAAA0G,EAAAlI,GACAgI,EAAAC,SAAA7E,EAAA1D,OAAAM,GAAAkI,EAAAZ,MAKAQ,EAAArI,UAAA0I,WAAA,SAAA/E,GACA,GAAAvE,GAAAhB,KAAA8E,IAAAS,EAAAM,MAAA,OACA1D,EAAAoD,IAAA5C,OAAA,EACA3B,GAAA4C,SAAAzB,GAAAsH,SAEAzI,EAAA+I,YAAA5H,GAsBA,IAAAxB,GAEA9B,EAAA,SAAAgC,GACA,GAAAsJ,GAAAnK,IACA,UAAAa,UAEAuC,EAAAzC,EAAA,6DACAyC,EAAA,mBAAA4E,SAAA,oDAEA,IAAAlJ,GAAA+B,EAAA/B,KAA4B,UAAAA,SAC5B,IAAAyL,GAAA1J,EAAA0J,OAAgC,UAAAA,SAChC,IAAAtF,GAAApE,EAAAoE,MAA8B,UAAAA,OAAA,GAG9BjF,KAAAsI,aAAA,EACAtI,KAAA+D,SAAA1B,OAAA2B,OAAA,MACAhE,KAAAiE,WAAA5B,OAAA2B,OAAA,MACAhE,KAAAkE,gBAAA7B,OAAA2B,OAAA,MACAhE,KAAAqE,SAAA,GAAA4F,GAAApJ,GACAb,KAAAmE,qBAAA9B,OAAA2B,OAAA,MACAhE,KAAAwK,gBACAxK,KAAAyK,WAAA,GAAA9J,EAGA,IAAA/B,GAAAoB,KACAgJ,EAAAhJ,KACA8G,EAAAkC,EAAAlC,SACArH,EAAAuJ,EAAAvJ,MACAO,MAAA8G,SAAA,SAAAO,EAAAD,GACA,MAAAN,GAAAhF,KAAAlD,EAAAyI,EAAAD,IAEApH,KAAAP,OAAA,SAAA4H,EAAAD,EAAAvG,GACA,MAAApB,GAAAqC,KAAAlD,EAAAyI,EAAAD,EAAAvG,IAIAb,KAAAiF,SAKAb,EAAApE,KAAAlB,KAAAkB,KAAAqE,SAAAC,MAIAC,EAAAvE,KAAAlB,GAGAyL,EAAA1I,OAAA5B,GAAAgD,QAAA,SAAAyH,GAA2D,MAAAA,GAAAP,MAG3DQ,GAA0B7L,SAE1B6L,GAAA7L,MAAAgG,IAAA,WACA,MAAA9E,MAAAyE,IAAAmG,MAAA9L,OAGA6L,EAAA7L,MAAAiH,IAAA,SAAA8E,GACAzH,GAAA,gEAGAvE,EAAA+C,UAAAnC,OAAA,SAAAsH,EAAAC,EAAAC,GACA,GAAAkD,GAAAnK,KAGAgJ,EAAA7B,EAAAJ,EAAAC,EAAAC,GACAI,EAAA2B,EAAA3B,KACAD,EAAA4B,EAAA5B,QACAvG,EAAAmI,EAAAnI,QAEAJ,GAAkB4G,OAAAD,WAClBO,EAAA3H,KAAAiE,WAAAoD,EACA,OAAAM,IAIA3H,KAAAmF,YAAA,WACAwC,EAAA1E,QAAA,SAAAyE,GACAA,EAAAN,OAGApH,KAAAwK,aAAAvH,QAAA,SAAA6H,GAA4C,MAAAA,GAAArK,EAAA0J,EAAArL,cAE5C+B,KAAAmE,QACAlC,QAAAe,KACA,yBAAAwD,EAAA,4FAZAvE,SAAAC,MAAA,iCAAAsE,IAkBAxI,EAAA+C,UAAAkF,SAAA,SAAAC,EAAAC,GAEA,GAAAgC,GAAA7B,EAAAJ,EAAAC,GACAK,EAAA2B,EAAA3B,KACAD,EAAA4B,EAAA5B,QAEAO,EAAA3H,KAAA+D,SAAAsD,EACA,OAAAM,GAIAA,EAAAhF,OAAA,EACAqF,QAAA+C,IAAApD,EAAA3F,IAAA,SAAA0F,GAAgD,MAAAA,GAAAN,MAChDO,EAAA,GAAAP,OALAtE,SAAAC,MAAA,+BAAAsE,IAQAxI,EAAA+C,UAAApB,UAAA,SAAAgC,GACA,GAAAwI,GAAAhL,KAAAwK,YAIA,OAHAQ,GAAAzJ,QAAAiB,GAAA,GACAwI,EAAApD,KAAApF,GAEA,WACA,GAAAyI,GAAAD,EAAAzJ,QAAAiB,EACAyI,IAAA,GACAD,EAAAE,OAAAD,EAAA,KAKApM,EAAA+C,UAAAuJ,MAAA,SAAA1E,EAAAoB,EAAAhH,GACA,GAAAsJ,GAAAnK,IAGA,OADAoD,GAAA,kBAAAqD,GAAA,wCACAzG,KAAAyK,WAAApC,OAAA,WAA6C,MAAA5B,GAAA0D,EAAArL,MAAAqL,EAAAzF,UAA+CmD,EAAAhH,IAG5FhC,EAAA+C,UAAArB,aAAA,SAAAzB,GACA,GAAAqL,GAAAnK,IAEAA,MAAAmF,YAAA,WACAgF,EAAA1F,IAAA3F,WAIAD,EAAA+C,UAAAwJ,eAAA,SAAA7F,EAAAiE,GACA,gBAAAjE,KAAiCA,OACjCnC,EAAAnB,MAAAC,QAAAqD,GAAA,6CACAvF,KAAAqE,SAAA+F,SAAA7E,EAAAiE,GACApF,EAAApE,UAAAlB,MAAAyG,EAAAvF,KAAAqE,SAAAS,IAAAS,IAEAhB,EAAAvE,UAAAlB,QAGAD,EAAA+C,UAAAyJ,iBAAA,SAAA9F,GACA,GAAA4E,GAAAnK,IAEA,iBAAAuF,KAAiCA,OACjCnC,EAAAnB,MAAAC,QAAAqD,GAAA,6CACAvF,KAAAqE,SAAAiG,WAAA/E,GACAvF,KAAAmF,YAAA,WACA,GAAAQ,GAAAC,EAAAuE,EAAArL,MAAAyG,EAAAM,MAAA,MACAlF,GAAA2K,OAAA3F,EAAAJ,IAAA5C,OAAA,MAEAmB,EAAA9D,OAGAnB,EAAA+C,UAAA2J,UAAA,SAAAC,GACAxL,KAAAqE,SAAAb,OAAAgI,GACA1H,EAAA9D,OAGAnB,EAAA+C,UAAAuD,YAAA,SAAA3C,GACA,GAAAiJ,GAAAzL,KAAAsI,WACAtI,MAAAsI,aAAA,EACA9F,IACAxC,KAAAsI,YAAAmD,GAGApJ,OAAA2H,iBAAAnL,EAAA+C,UAAA+I,GA2PA,mBAAA/B,gBAAAjI,KACA+H,EAAAE,OAAAjI,IAGA,IAAA+K,IACA7M,QACA6J,UACAzH,QAAA,QACA6H,WACAG,eACAI,aACAC,aAGA,OAAAoC,MFyDM,SAAS5N,EAAQC,KAMjB,SAASD,EAAQC,EAASC,GGrzBhC,GAAA2N,GAAAC,CAIA5N,GAAA,GAGA2N,EAAA3N,EAAA,EAGA,IAAA6N,GAAA7N,EAAA,EACA4N,GAAAD,QAEA,gBAAAA,GAAAvN,SACA,kBAAAuN,GAAAvN,UAEAwN,EAAAD,IAAAvN,SAEA,kBAAAwN,KACAA,IAAA/K,SAGA+K,EAAAE,OAAAD,EAAAC,OACAF,EAAAG,gBAAAF,EAAAE,gBAEAjO,EAAAC,QAAA4N,GH4zBM,SAAS7N,EAAQC,GIr1BvBD,EAAAC,SAAgB+N,OAAA,WAAmB,GAAArH,GAAAzE,KAAagM,EAAAvH,EAAAwH,eAA0BC,EAAAzH,EAAA0H,MAAAD,IAAAF,CAC1E,OAAAE,GAAA,OACAE,OACAC,GAAA,SAEGH,EAAA,MAAAzH,EAAA6H,GAAA,cAAA7H,EAAA6H,GAAA,KAAAJ,EAAA,KAAAzH,EAAA8H,GAAA9H,EAAA,cAAA+H,GACH,MAAAN,GAAA,MAAAzH,EAAA6H,GAAA7H,EAAAgI,GAAAD,EAAAE,aACGjI,EAAA6H,GAAA,KAAAJ,EAAA,UACH7L,IACAsM,MAAAlI,EAAAmI,UAEGnI,EAAA6H,GAAA,cACFP,qBJ01BM,CAED,SAASjO,EAAQC,GAEtB,YAEAsE,QAAOwC,eAAe9G,EAAS,cAC7B8O,OAAO,IAET9O,EAAQK,SACNkB,KKn2BH,MLo2BGwN,SACEF,OAAQ,WACN5M,KAAKe,OAAO+F,SAAS,WAAaxH,KKn2BzC,aLs2BGsF,UACE7F,KAAM,WACJ,MAAOiB,MAAKe,OKn2BnBhC","file":"static/js/app.96847481a0b6f2cd99ba.js","sourcesContent":["webpackJsonp([1,0],[\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _vue = __webpack_require__(5);\n\t\n\tvar _vue2 = _interopRequireDefault(_vue);\n\t\n\tvar _App = __webpack_require__(3);\n\t\n\tvar _App2 = _interopRequireDefault(_App);\n\t\n\tvar _vuex = __webpack_require__(1);\n\t\n\tvar _vuex2 = _interopRequireDefault(_vuex);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\t_vue2.default.use(_vuex2.default);\n\t\n\tvar store = new _vuex2.default.Store({\n\t\tstate: {\n\t\t\tnews: []\n\t\t},\n\t\tmutations: {\n\t\t\tgetNews: function getNews(state, news) {\n\t\t\t\tstate.news = news.news;\n\t\t\t}\n\t\t},\n\t\tactions: {\n\t\t\tgetNews: function getNews(context, cat) {\n\t\t\t\tfetch('/api/getNews?cat=' + cat.name).then(function (data) {\n\t\t\t\t\tcontext.commit('getNews', { 'news': data['data'] });\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t});\n\t\n\tnew _vue2.default({\n\t\tel: '#app',\n\t\tstore: store,\n\t\ttemplate: '<App/>',\n\t\tcomponents: { App: _App2.default }\n\t});\n\n/***/ },\n/* 1 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * vuex v2.1.1\n\t * (c) 2016 Evan You\n\t * @license MIT\n\t */\n\t(function (global, factory) {\n\t   true ? module.exports = factory() :\n\t  typeof define === 'function' && define.amd ? define(factory) :\n\t  (global.Vuex = factory());\n\t}(this, (function () { 'use strict';\n\t\n\tvar devtoolHook =\n\t  typeof window !== 'undefined' &&\n\t  window.__VUE_DEVTOOLS_GLOBAL_HOOK__\n\t\n\tfunction devtoolPlugin (store) {\n\t  if (!devtoolHook) { return }\n\t\n\t  store._devtoolHook = devtoolHook\n\t\n\t  devtoolHook.emit('vuex:init', store)\n\t\n\t  devtoolHook.on('vuex:travel-to-state', function (targetState) {\n\t    store.replaceState(targetState)\n\t  })\n\t\n\t  store.subscribe(function (mutation, state) {\n\t    devtoolHook.emit('vuex:mutation', mutation, state)\n\t  })\n\t}\n\t\n\tfunction applyMixin (Vue) {\n\t  var version = Number(Vue.version.split('.')[0])\n\t\n\t  if (version >= 2) {\n\t    var usesInit = Vue.config._lifecycleHooks.indexOf('init') > -1\n\t    Vue.mixin(usesInit ? { init: vuexInit } : { beforeCreate: vuexInit })\n\t  } else {\n\t    // override init and inject vuex init procedure\n\t    // for 1.x backwards compatibility.\n\t    var _init = Vue.prototype._init\n\t    Vue.prototype._init = function (options) {\n\t      if ( options === void 0 ) options = {};\n\t\n\t      options.init = options.init\n\t        ? [vuexInit].concat(options.init)\n\t        : vuexInit\n\t      _init.call(this, options)\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Vuex init hook, injected into each instances init hooks list.\n\t   */\n\t\n\t  function vuexInit () {\n\t    var options = this.$options\n\t    // store injection\n\t    if (options.store) {\n\t      this.$store = options.store\n\t    } else if (options.parent && options.parent.$store) {\n\t      this.$store = options.parent.$store\n\t    }\n\t  }\n\t}\n\t\n\tvar mapState = normalizeNamespace(function (namespace, states) {\n\t  var res = {}\n\t  normalizeMap(states).forEach(function (ref) {\n\t    var key = ref.key;\n\t    var val = ref.val;\n\t\n\t    res[key] = function mappedState () {\n\t      var state = this.$store.state\n\t      var getters = this.$store.getters\n\t      if (namespace) {\n\t        var module = this.$store._modulesNamespaceMap[namespace]\n\t        if (!module) {\n\t          warnNamespace('mapState', namespace)\n\t          return\n\t        }\n\t        state = module.state\n\t        getters = module.context.getters\n\t      }\n\t      return typeof val === 'function'\n\t        ? val.call(this, state, getters)\n\t        : state[val]\n\t    }\n\t  })\n\t  return res\n\t})\n\t\n\tvar mapMutations = normalizeNamespace(function (namespace, mutations) {\n\t  var res = {}\n\t  normalizeMap(mutations).forEach(function (ref) {\n\t    var key = ref.key;\n\t    var val = ref.val;\n\t\n\t    val = namespace + val\n\t    res[key] = function mappedMutation () {\n\t      var args = [], len = arguments.length;\n\t      while ( len-- ) args[ len ] = arguments[ len ];\n\t\n\t      return this.$store.commit.apply(this.$store, [val].concat(args))\n\t    }\n\t  })\n\t  return res\n\t})\n\t\n\tvar mapGetters = normalizeNamespace(function (namespace, getters) {\n\t  var res = {}\n\t  normalizeMap(getters).forEach(function (ref) {\n\t    var key = ref.key;\n\t    var val = ref.val;\n\t\n\t    val = namespace + val\n\t    res[key] = function mappedGetter () {\n\t      if (!(val in this.$store.getters)) {\n\t        console.error((\"[vuex] unknown getter: \" + val))\n\t      }\n\t      return this.$store.getters[val]\n\t    }\n\t  })\n\t  return res\n\t})\n\t\n\tvar mapActions = normalizeNamespace(function (namespace, actions) {\n\t  var res = {}\n\t  normalizeMap(actions).forEach(function (ref) {\n\t    var key = ref.key;\n\t    var val = ref.val;\n\t\n\t    val = namespace + val\n\t    res[key] = function mappedAction () {\n\t      var args = [], len = arguments.length;\n\t      while ( len-- ) args[ len ] = arguments[ len ];\n\t\n\t      return this.$store.dispatch.apply(this.$store, [val].concat(args))\n\t    }\n\t  })\n\t  return res\n\t})\n\t\n\tfunction normalizeMap (map) {\n\t  return Array.isArray(map)\n\t    ? map.map(function (key) { return ({ key: key, val: key }); })\n\t    : Object.keys(map).map(function (key) { return ({ key: key, val: map[key] }); })\n\t}\n\t\n\tfunction normalizeNamespace (fn) {\n\t  return function (namespace, map) {\n\t    if (typeof namespace !== 'string') {\n\t      map = namespace\n\t      namespace = ''\n\t    } else if (namespace.charAt(namespace.length - 1) !== '/') {\n\t      namespace += '/'\n\t    }\n\t    return fn(namespace, map)\n\t  }\n\t}\n\t\n\tfunction warnNamespace (helper, namespace) {\n\t  console.error((\"[vuex] module namespace not found in \" + helper + \"(): \" + namespace))\n\t}\n\t\n\t/**\n\t * forEach for object\n\t */\n\tfunction forEachValue (obj, fn) {\n\t  Object.keys(obj).forEach(function (key) { return fn(obj[key], key); })\n\t}\n\t\n\tfunction isObject (obj) {\n\t  return obj !== null && typeof obj === 'object'\n\t}\n\t\n\tfunction isPromise (val) {\n\t  return val && typeof val.then === 'function'\n\t}\n\t\n\tfunction assert (condition, msg) {\n\t  if (!condition) { throw new Error((\"[vuex] \" + msg)) }\n\t}\n\t\n\tvar Module = function Module (rawModule, runtime) {\n\t  this.runtime = runtime\n\t  this._children = Object.create(null)\n\t  this._rawModule = rawModule\n\t};\n\t\n\tvar prototypeAccessors$1 = { state: {},namespaced: {} };\n\t\n\tprototypeAccessors$1.state.get = function () {\n\t  return this._rawModule.state || {}\n\t};\n\t\n\tprototypeAccessors$1.namespaced.get = function () {\n\t  return !!this._rawModule.namespaced\n\t};\n\t\n\tModule.prototype.addChild = function addChild (key, module) {\n\t  this._children[key] = module\n\t};\n\t\n\tModule.prototype.removeChild = function removeChild (key) {\n\t  delete this._children[key]\n\t};\n\t\n\tModule.prototype.getChild = function getChild (key) {\n\t  return this._children[key]\n\t};\n\t\n\tModule.prototype.update = function update (rawModule) {\n\t  this._rawModule.namespaced = rawModule.namespaced\n\t  if (rawModule.actions) {\n\t    this._rawModule.actions = rawModule.actions\n\t  }\n\t  if (rawModule.mutations) {\n\t    this._rawModule.mutations = rawModule.mutations\n\t  }\n\t  if (rawModule.getters) {\n\t    this._rawModule.getters = rawModule.getters\n\t  }\n\t};\n\t\n\tModule.prototype.forEachChild = function forEachChild (fn) {\n\t  forEachValue(this._children, fn)\n\t};\n\t\n\tModule.prototype.forEachGetter = function forEachGetter (fn) {\n\t  if (this._rawModule.getters) {\n\t    forEachValue(this._rawModule.getters, fn)\n\t  }\n\t};\n\t\n\tModule.prototype.forEachAction = function forEachAction (fn) {\n\t  if (this._rawModule.actions) {\n\t    forEachValue(this._rawModule.actions, fn)\n\t  }\n\t};\n\t\n\tModule.prototype.forEachMutation = function forEachMutation (fn) {\n\t  if (this._rawModule.mutations) {\n\t    forEachValue(this._rawModule.mutations, fn)\n\t  }\n\t};\n\t\n\tObject.defineProperties( Module.prototype, prototypeAccessors$1 );\n\t\n\tvar ModuleCollection = function ModuleCollection (rawRootModule) {\n\t  var this$1 = this;\n\t\n\t  // register root module (Vuex.Store options)\n\t  this.root = new Module(rawRootModule, false)\n\t\n\t  // register all nested modules\n\t  if (rawRootModule.modules) {\n\t    forEachValue(rawRootModule.modules, function (rawModule, key) {\n\t      this$1.register([key], rawModule, false)\n\t    })\n\t  }\n\t};\n\t\n\tModuleCollection.prototype.get = function get (path) {\n\t  return path.reduce(function (module, key) {\n\t    return module.getChild(key)\n\t  }, this.root)\n\t};\n\t\n\tModuleCollection.prototype.getNamespace = function getNamespace (path) {\n\t  var module = this.root\n\t  return path.reduce(function (namespace, key) {\n\t    module = module.getChild(key)\n\t    return namespace + (module.namespaced ? key + '/' : '')\n\t  }, '')\n\t};\n\t\n\tModuleCollection.prototype.update = function update$1 (rawRootModule) {\n\t  update(this.root, rawRootModule)\n\t};\n\t\n\tModuleCollection.prototype.register = function register (path, rawModule, runtime) {\n\t    var this$1 = this;\n\t    if ( runtime === void 0 ) runtime = true;\n\t\n\t  var parent = this.get(path.slice(0, -1))\n\t  var newModule = new Module(rawModule, runtime)\n\t  parent.addChild(path[path.length - 1], newModule)\n\t\n\t  // register nested modules\n\t  if (rawModule.modules) {\n\t    forEachValue(rawModule.modules, function (rawChildModule, key) {\n\t      this$1.register(path.concat(key), rawChildModule, runtime)\n\t    })\n\t  }\n\t};\n\t\n\tModuleCollection.prototype.unregister = function unregister (path) {\n\t  var parent = this.get(path.slice(0, -1))\n\t  var key = path[path.length - 1]\n\t  if (!parent.getChild(key).runtime) { return }\n\t\n\t  parent.removeChild(key)\n\t};\n\t\n\tfunction update (targetModule, newModule) {\n\t  // update target module\n\t  targetModule.update(newModule)\n\t\n\t  // update nested modules\n\t  if (newModule.modules) {\n\t    for (var key in newModule.modules) {\n\t      if (!targetModule.getChild(key)) {\n\t        console.warn(\n\t          \"[vuex] trying to add a new module '\" + key + \"' on hot reloading, \" +\n\t          'manual reload is needed'\n\t        )\n\t        return\n\t      }\n\t      update(targetModule.getChild(key), newModule.modules[key])\n\t    }\n\t  }\n\t}\n\t\n\tvar Vue // bind on install\n\t\n\tvar Store = function Store (options) {\n\t  var this$1 = this;\n\t  if ( options === void 0 ) options = {};\n\t\n\t  assert(Vue, \"must call Vue.use(Vuex) before creating a store instance.\")\n\t  assert(typeof Promise !== 'undefined', \"vuex requires a Promise polyfill in this browser.\")\n\t\n\t  var state = options.state; if ( state === void 0 ) state = {};\n\t  var plugins = options.plugins; if ( plugins === void 0 ) plugins = [];\n\t  var strict = options.strict; if ( strict === void 0 ) strict = false;\n\t\n\t  // store internal state\n\t  this._committing = false\n\t  this._actions = Object.create(null)\n\t  this._mutations = Object.create(null)\n\t  this._wrappedGetters = Object.create(null)\n\t  this._modules = new ModuleCollection(options)\n\t  this._modulesNamespaceMap = Object.create(null)\n\t  this._subscribers = []\n\t  this._watcherVM = new Vue()\n\t\n\t  // bind commit and dispatch to self\n\t  var store = this\n\t  var ref = this;\n\t  var dispatch = ref.dispatch;\n\t  var commit = ref.commit;\n\t    this.dispatch = function boundDispatch (type, payload) {\n\t    return dispatch.call(store, type, payload)\n\t  }\n\t  this.commit = function boundCommit (type, payload, options) {\n\t    return commit.call(store, type, payload, options)\n\t    }\n\t\n\t    // strict mode\n\t  this.strict = strict\n\t\n\t  // init root module.\n\t  // this also recursively registers all sub-modules\n\t  // and collects all module getters inside this._wrappedGetters\n\t  installModule(this, state, [], this._modules.root)\n\t\n\t  // initialize the store vm, which is responsible for the reactivity\n\t  // (also registers _wrappedGetters as computed properties)\n\t  resetStoreVM(this, state)\n\t\n\t  // apply plugins\n\t  plugins.concat(devtoolPlugin).forEach(function (plugin) { return plugin(this$1); })\n\t};\n\t\n\tvar prototypeAccessors = { state: {} };\n\t\n\tprototypeAccessors.state.get = function () {\n\t  return this._vm.$data.state\n\t};\n\t\n\tprototypeAccessors.state.set = function (v) {\n\t  assert(false, \"Use store.replaceState() to explicit replace store state.\")\n\t};\n\t\n\tStore.prototype.commit = function commit (_type, _payload, _options) {\n\t    var this$1 = this;\n\t\n\t  // check object-style commit\n\t  var ref = unifyObjectStyle(_type, _payload, _options);\n\t    var type = ref.type;\n\t    var payload = ref.payload;\n\t    var options = ref.options;\n\t\n\t  var mutation = { type: type, payload: payload }\n\t  var entry = this._mutations[type]\n\t  if (!entry) {\n\t    console.error((\"[vuex] unknown mutation type: \" + type))\n\t    return\n\t  }\n\t  this._withCommit(function () {\n\t    entry.forEach(function commitIterator (handler) {\n\t      handler(payload)\n\t    })\n\t  })\n\t  this._subscribers.forEach(function (sub) { return sub(mutation, this$1.state); })\n\t\n\t  if (options && options.silent) {\n\t    console.warn(\n\t      \"[vuex] mutation type: \" + type + \". Silent option has been removed. \" +\n\t      'Use the filter functionality in the vue-devtools'\n\t    )\n\t  }\n\t};\n\t\n\tStore.prototype.dispatch = function dispatch (_type, _payload) {\n\t  // check object-style dispatch\n\t  var ref = unifyObjectStyle(_type, _payload);\n\t    var type = ref.type;\n\t    var payload = ref.payload;\n\t\n\t  var entry = this._actions[type]\n\t  if (!entry) {\n\t    console.error((\"[vuex] unknown action type: \" + type))\n\t    return\n\t  }\n\t  return entry.length > 1\n\t    ? Promise.all(entry.map(function (handler) { return handler(payload); }))\n\t    : entry[0](payload)\n\t};\n\t\n\tStore.prototype.subscribe = function subscribe (fn) {\n\t  var subs = this._subscribers\n\t  if (subs.indexOf(fn) < 0) {\n\t    subs.push(fn)\n\t  }\n\t  return function () {\n\t    var i = subs.indexOf(fn)\n\t    if (i > -1) {\n\t      subs.splice(i, 1)\n\t    }\n\t  }\n\t};\n\t\n\tStore.prototype.watch = function watch (getter, cb, options) {\n\t    var this$1 = this;\n\t\n\t  assert(typeof getter === 'function', \"store.watch only accepts a function.\")\n\t  return this._watcherVM.$watch(function () { return getter(this$1.state, this$1.getters); }, cb, options)\n\t};\n\t\n\tStore.prototype.replaceState = function replaceState (state) {\n\t    var this$1 = this;\n\t\n\t  this._withCommit(function () {\n\t    this$1._vm.state = state\n\t  })\n\t};\n\t\n\tStore.prototype.registerModule = function registerModule (path, rawModule) {\n\t  if (typeof path === 'string') { path = [path] }\n\t  assert(Array.isArray(path), \"module path must be a string or an Array.\")\n\t  this._modules.register(path, rawModule)\n\t  installModule(this, this.state, path, this._modules.get(path))\n\t  // reset store to update getters...\n\t  resetStoreVM(this, this.state)\n\t};\n\t\n\tStore.prototype.unregisterModule = function unregisterModule (path) {\n\t    var this$1 = this;\n\t\n\t  if (typeof path === 'string') { path = [path] }\n\t  assert(Array.isArray(path), \"module path must be a string or an Array.\")\n\t    this._modules.unregister(path)\n\t  this._withCommit(function () {\n\t    var parentState = getNestedState(this$1.state, path.slice(0, -1))\n\t    Vue.delete(parentState, path[path.length - 1])\n\t  })\n\t  resetStore(this)\n\t};\n\t\n\tStore.prototype.hotUpdate = function hotUpdate (newOptions) {\n\t  this._modules.update(newOptions)\n\t  resetStore(this)\n\t};\n\t\n\tStore.prototype._withCommit = function _withCommit (fn) {\n\t  var committing = this._committing\n\t  this._committing = true\n\t  fn()\n\t  this._committing = committing\n\t};\n\t\n\tObject.defineProperties( Store.prototype, prototypeAccessors );\n\t\n\tfunction resetStore (store) {\n\t  store._actions = Object.create(null)\n\t  store._mutations = Object.create(null)\n\t  store._wrappedGetters = Object.create(null)\n\t  store._modulesNamespaceMap = Object.create(null)\n\t  var state = store.state\n\t  // init all modules\n\t  installModule(store, state, [], store._modules.root, true)\n\t  // reset vm\n\t  resetStoreVM(store, state)\n\t}\n\t\n\tfunction resetStoreVM (store, state) {\n\t  var oldVm = store._vm\n\t\n\t  // bind store public getters\n\t  store.getters = {}\n\t  var wrappedGetters = store._wrappedGetters\n\t  var computed = {}\n\t  forEachValue(wrappedGetters, function (fn, key) {\n\t    // use computed to leverage its lazy-caching mechanism\n\t    computed[key] = function () { return fn(store); }\n\t    Object.defineProperty(store.getters, key, {\n\t      get: function () { return store._vm[key]; },\n\t      enumerable: true // for local getters\n\t    })\n\t  })\n\t\n\t  // use a Vue instance to store the state tree\n\t  // suppress warnings just in case the user has added\n\t  // some funky global mixins\n\t  var silent = Vue.config.silent\n\t  Vue.config.silent = true\n\t  store._vm = new Vue({\n\t    data: { state: state },\n\t    computed: computed\n\t  })\n\t  Vue.config.silent = silent\n\t\n\t  // enable strict mode for new vm\n\t  if (store.strict) {\n\t    enableStrictMode(store)\n\t  }\n\t\n\t  if (oldVm) {\n\t    // dispatch changes in all subscribed watchers\n\t    // to force getter re-evaluation.\n\t    store._withCommit(function () {\n\t      oldVm.state = null\n\t    })\n\t    Vue.nextTick(function () { return oldVm.$destroy(); })\n\t  }\n\t}\n\t\n\tfunction installModule (store, rootState, path, module, hot) {\n\t  var isRoot = !path.length\n\t  var namespace = store._modules.getNamespace(path)\n\t\n\t  // register in namespace map\n\t  if (namespace) {\n\t    store._modulesNamespaceMap[namespace] = module\n\t  }\n\t\n\t  // set state\n\t  if (!isRoot && !hot) {\n\t    var parentState = getNestedState(rootState, path.slice(0, -1))\n\t    var moduleName = path[path.length - 1]\n\t    store._withCommit(function () {\n\t      Vue.set(parentState, moduleName, module.state)\n\t    })\n\t  }\n\t\n\t  var local = module.context = makeLocalContext(store, namespace)\n\t\n\t  module.forEachMutation(function (mutation, key) {\n\t    var namespacedType = namespace + key\n\t    registerMutation(store, namespacedType, mutation, path)\n\t  })\n\t\n\t  module.forEachAction(function (action, key) {\n\t    var namespacedType = namespace + key\n\t    registerAction(store, namespacedType, action, local, path)\n\t  })\n\t\n\t  module.forEachGetter(function (getter, key) {\n\t    var namespacedType = namespace + key\n\t    registerGetter(store, namespacedType, getter, local, path)\n\t  })\n\t\n\t  module.forEachChild(function (child, key) {\n\t    installModule(store, rootState, path.concat(key), child, hot)\n\t  })\n\t}\n\t\n\t/**\n\t * make localized dispatch, commit and getters\n\t * if there is no namespace, just use root ones\n\t */\n\tfunction makeLocalContext (store, namespace) {\n\t  var noNamespace = namespace === ''\n\t\n\t  var local = {\n\t    dispatch: noNamespace ? store.dispatch : function (_type, _payload, _options) {\n\t      var args = unifyObjectStyle(_type, _payload, _options)\n\t      var payload = args.payload;\n\t      var options = args.options;\n\t      var type = args.type;\n\t\n\t      if (!options || !options.root) {\n\t        type = namespace + type\n\t        if (!store._actions[type]) {\n\t          console.error((\"[vuex] unknown local action type: \" + (args.type) + \", global type: \" + type))\n\t          return\n\t        }\n\t      }\n\t\n\t      return store.dispatch(type, payload)\n\t    },\n\t\n\t    commit: noNamespace ? store.commit : function (_type, _payload, _options) {\n\t      var args = unifyObjectStyle(_type, _payload, _options)\n\t      var payload = args.payload;\n\t      var options = args.options;\n\t      var type = args.type;\n\t\n\t      if (!options || !options.root) {\n\t        type = namespace + type\n\t        if (!store._mutations[type]) {\n\t          console.error((\"[vuex] unknown local mutation type: \" + (args.type) + \", global type: \" + type))\n\t          return\n\t        }\n\t      }\n\t\n\t      store.commit(type, payload, options)\n\t    }\n\t  }\n\t\n\t  // getters object must be gotten lazily\n\t  // because store.getters will be changed by vm update\n\t  Object.defineProperty(local, 'getters', {\n\t    get: noNamespace ? function () { return store.getters; } : function () { return makeLocalGetters(store, namespace); }\n\t  })\n\t\n\t  return local\n\t}\n\t\n\tfunction makeLocalGetters (store, namespace) {\n\t  var gettersProxy = {}\n\t\n\t  var splitPos = namespace.length\n\t  Object.keys(store.getters).forEach(function (type) {\n\t    // skip if the target getter is not match this namespace\n\t    if (type.slice(0, splitPos) !== namespace) { return }\n\t\n\t    // extract local getter type\n\t    var localType = type.slice(splitPos)\n\t\n\t    // Add a port to the getters proxy.\n\t    // Define as getter property because\n\t    // we do not want to evaluate the getters in this time.\n\t    Object.defineProperty(gettersProxy, localType, {\n\t      get: function () { return store.getters[type]; },\n\t      enumerable: true\n\t    })\n\t  })\n\t\n\t  return gettersProxy\n\t}\n\t\n\tfunction registerMutation (store, type, handler, path) {\n\t  var entry = store._mutations[type] || (store._mutations[type] = [])\n\t  entry.push(function wrappedMutationHandler (payload) {\n\t    handler(getNestedState(store.state, path), payload)\n\t  })\n\t}\n\t\n\tfunction registerAction (store, type, handler, local, path) {\n\t  var entry = store._actions[type] || (store._actions[type] = [])\n\t  entry.push(function wrappedActionHandler (payload, cb) {\n\t    var res = handler({\n\t      dispatch: local.dispatch,\n\t      commit: local.commit,\n\t      getters: local.getters,\n\t      state: getNestedState(store.state, path),\n\t      rootGetters: store.getters,\n\t      rootState: store.state\n\t    }, payload, cb)\n\t    if (!isPromise(res)) {\n\t      res = Promise.resolve(res)\n\t    }\n\t    if (store._devtoolHook) {\n\t      return res.catch(function (err) {\n\t        store._devtoolHook.emit('vuex:error', err)\n\t        throw err\n\t      })\n\t    } else {\n\t      return res\n\t    }\n\t  })\n\t}\n\t\n\tfunction registerGetter (store, type, rawGetter, local, path) {\n\t  if (store._wrappedGetters[type]) {\n\t    console.error((\"[vuex] duplicate getter key: \" + type))\n\t    return\n\t  }\n\t  store._wrappedGetters[type] = function wrappedGetter (store) {\n\t    return rawGetter(\n\t      getNestedState(store.state, path), // local state\n\t      local.getters, // local getters\n\t      store.state, // root state\n\t      store.getters // root getters\n\t    )\n\t  }\n\t}\n\t\n\tfunction enableStrictMode (store) {\n\t  store._vm.$watch('state', function () {\n\t    assert(store._committing, \"Do not mutate vuex store state outside mutation handlers.\")\n\t  }, { deep: true, sync: true })\n\t}\n\t\n\tfunction getNestedState (state, path) {\n\t  return path.length\n\t    ? path.reduce(function (state, key) { return state[key]; }, state)\n\t    : state\n\t}\n\t\n\tfunction unifyObjectStyle (type, payload, options) {\n\t  if (isObject(type) && type.type) {\n\t    options = payload\n\t    payload = type\n\t    type = type.type\n\t  }\n\t  return { type: type, payload: payload, options: options }\n\t}\n\t\n\tfunction install (_Vue) {\n\t  if (Vue) {\n\t    console.error(\n\t      '[vuex] already installed. Vue.use(Vuex) should be called only once.'\n\t    )\n\t    return\n\t  }\n\t  Vue = _Vue\n\t  applyMixin(Vue)\n\t}\n\t\n\t// auto install in dist mode\n\tif (typeof window !== 'undefined' && window.Vue) {\n\t  install(window.Vue)\n\t}\n\t\n\tvar index = {\n\t  Store: Store,\n\t  install: install,\n\t  version: '2.1.1',\n\t  mapState: mapState,\n\t  mapMutations: mapMutations,\n\t  mapGetters: mapGetters,\n\t  mapActions: mapActions\n\t}\n\t\n\treturn index;\n\t\n\t})));\n\n/***/ },\n/* 2 */\n/***/ function(module, exports) {\n\n\t// removed by extract-text-webpack-plugin\n\n/***/ },\n/* 3 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __vue_exports__, __vue_options__\n\tvar __vue_styles__ = {}\n\t\n\t/* styles */\n\t__webpack_require__(2)\n\t\n\t/* script */\n\t__vue_exports__ = __webpack_require__(6)\n\t\n\t/* template */\n\tvar __vue_template__ = __webpack_require__(4)\n\t__vue_options__ = __vue_exports__ = __vue_exports__ || {}\n\tif (\n\t  typeof __vue_exports__.default === \"object\" ||\n\t  typeof __vue_exports__.default === \"function\"\n\t) {\n\t__vue_options__ = __vue_exports__ = __vue_exports__.default\n\t}\n\tif (typeof __vue_options__ === \"function\") {\n\t  __vue_options__ = __vue_options__.options\n\t}\n\t\n\t__vue_options__.render = __vue_template__.render\n\t__vue_options__.staticRenderFns = __vue_template__.staticRenderFns\n\t\n\tmodule.exports = __vue_exports__\n\n\n/***/ },\n/* 4 */\n/***/ function(module, exports) {\n\n\tmodule.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n\t  return _c('div', {\n\t    attrs: {\n\t      \"id\": \"app\"\n\t    }\n\t  }, [_c('h1', [_vm._v(\"Vue News\")]), _vm._v(\" \"), _c('ul', _vm._l((_vm.news), function(n) {\n\t    return _c('li', [_vm._v(_vm._s(n.title))])\n\t  })), _vm._v(\" \"), _c('button', {\n\t    on: {\n\t      \"click\": _vm.change\n\t    }\n\t  }, [_vm._v(\"click\")])])\n\t},staticRenderFns: []}\n\n/***/ },\n/* 5 */,\n/* 6 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.default = {\n\t  name: 'app',\n\t  methods: {\n\t    change: function change() {\n\t      this.$store.dispatch('getNews', { 'name': 'hacker' });\n\t    }\n\t  },\n\t  computed: {\n\t    news: function news() {\n\t      return this.$store.news;\n\t    }\n\t  }\n\t};\n\n/***/ }\n]);\n\n\n// WEBPACK FOOTER //\n// static/js/app.96847481a0b6f2cd99ba.js","// The Vue build version to load with the `import` command\n// (runtime-only or standalone) has been set in webpack.base.conf with an alias.\nimport Vue from 'vue'\nimport App from './App'\nimport Vuex from 'vuex'\n\nVue.use(Vuex)\n\nconst store = new Vuex.Store({\n\tstate: {\n\t\tnews: []\n\t},\n\tmutations: {\n\t\tgetNews (state, news){\n\t\t\tstate.news = news.news\n\t\t}\n\t},\n\tactions: {\n\t\tgetNews (context, cat){\n\t\t\tfetch('/api/getNews?cat='+ cat.name).then(function(data){ context.commit('getNews', {'news': data['data']})})\n\t\t}\n\t}\n})\n\nnew Vue({\n  el: '#app',\n  store,\n  template: '<App/>',\n  components: { App }\n})\n\n\n\n// WEBPACK FOOTER //\n// ./src/main.js","/**\n * vuex v2.1.1\n * (c) 2016 Evan You\n * @license MIT\n */\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n  typeof define === 'function' && define.amd ? define(factory) :\n  (global.Vuex = factory());\n}(this, (function () { 'use strict';\n\nvar devtoolHook =\n  typeof window !== 'undefined' &&\n  window.__VUE_DEVTOOLS_GLOBAL_HOOK__\n\nfunction devtoolPlugin (store) {\n  if (!devtoolHook) { return }\n\n  store._devtoolHook = devtoolHook\n\n  devtoolHook.emit('vuex:init', store)\n\n  devtoolHook.on('vuex:travel-to-state', function (targetState) {\n    store.replaceState(targetState)\n  })\n\n  store.subscribe(function (mutation, state) {\n    devtoolHook.emit('vuex:mutation', mutation, state)\n  })\n}\n\nfunction applyMixin (Vue) {\n  var version = Number(Vue.version.split('.')[0])\n\n  if (version >= 2) {\n    var usesInit = Vue.config._lifecycleHooks.indexOf('init') > -1\n    Vue.mixin(usesInit ? { init: vuexInit } : { beforeCreate: vuexInit })\n  } else {\n    // override init and inject vuex init procedure\n    // for 1.x backwards compatibility.\n    var _init = Vue.prototype._init\n    Vue.prototype._init = function (options) {\n      if ( options === void 0 ) options = {};\n\n      options.init = options.init\n        ? [vuexInit].concat(options.init)\n        : vuexInit\n      _init.call(this, options)\n    }\n  }\n\n  /**\n   * Vuex init hook, injected into each instances init hooks list.\n   */\n\n  function vuexInit () {\n    var options = this.$options\n    // store injection\n    if (options.store) {\n      this.$store = options.store\n    } else if (options.parent && options.parent.$store) {\n      this.$store = options.parent.$store\n    }\n  }\n}\n\nvar mapState = normalizeNamespace(function (namespace, states) {\n  var res = {}\n  normalizeMap(states).forEach(function (ref) {\n    var key = ref.key;\n    var val = ref.val;\n\n    res[key] = function mappedState () {\n      var state = this.$store.state\n      var getters = this.$store.getters\n      if (namespace) {\n        var module = this.$store._modulesNamespaceMap[namespace]\n        if (!module) {\n          warnNamespace('mapState', namespace)\n          return\n        }\n        state = module.state\n        getters = module.context.getters\n      }\n      return typeof val === 'function'\n        ? val.call(this, state, getters)\n        : state[val]\n    }\n  })\n  return res\n})\n\nvar mapMutations = normalizeNamespace(function (namespace, mutations) {\n  var res = {}\n  normalizeMap(mutations).forEach(function (ref) {\n    var key = ref.key;\n    var val = ref.val;\n\n    val = namespace + val\n    res[key] = function mappedMutation () {\n      var args = [], len = arguments.length;\n      while ( len-- ) args[ len ] = arguments[ len ];\n\n      return this.$store.commit.apply(this.$store, [val].concat(args))\n    }\n  })\n  return res\n})\n\nvar mapGetters = normalizeNamespace(function (namespace, getters) {\n  var res = {}\n  normalizeMap(getters).forEach(function (ref) {\n    var key = ref.key;\n    var val = ref.val;\n\n    val = namespace + val\n    res[key] = function mappedGetter () {\n      if (!(val in this.$store.getters)) {\n        console.error((\"[vuex] unknown getter: \" + val))\n      }\n      return this.$store.getters[val]\n    }\n  })\n  return res\n})\n\nvar mapActions = normalizeNamespace(function (namespace, actions) {\n  var res = {}\n  normalizeMap(actions).forEach(function (ref) {\n    var key = ref.key;\n    var val = ref.val;\n\n    val = namespace + val\n    res[key] = function mappedAction () {\n      var args = [], len = arguments.length;\n      while ( len-- ) args[ len ] = arguments[ len ];\n\n      return this.$store.dispatch.apply(this.$store, [val].concat(args))\n    }\n  })\n  return res\n})\n\nfunction normalizeMap (map) {\n  return Array.isArray(map)\n    ? map.map(function (key) { return ({ key: key, val: key }); })\n    : Object.keys(map).map(function (key) { return ({ key: key, val: map[key] }); })\n}\n\nfunction normalizeNamespace (fn) {\n  return function (namespace, map) {\n    if (typeof namespace !== 'string') {\n      map = namespace\n      namespace = ''\n    } else if (namespace.charAt(namespace.length - 1) !== '/') {\n      namespace += '/'\n    }\n    return fn(namespace, map)\n  }\n}\n\nfunction warnNamespace (helper, namespace) {\n  console.error((\"[vuex] module namespace not found in \" + helper + \"(): \" + namespace))\n}\n\n/**\n * forEach for object\n */\nfunction forEachValue (obj, fn) {\n  Object.keys(obj).forEach(function (key) { return fn(obj[key], key); })\n}\n\nfunction isObject (obj) {\n  return obj !== null && typeof obj === 'object'\n}\n\nfunction isPromise (val) {\n  return val && typeof val.then === 'function'\n}\n\nfunction assert (condition, msg) {\n  if (!condition) { throw new Error((\"[vuex] \" + msg)) }\n}\n\nvar Module = function Module (rawModule, runtime) {\n  this.runtime = runtime\n  this._children = Object.create(null)\n  this._rawModule = rawModule\n};\n\nvar prototypeAccessors$1 = { state: {},namespaced: {} };\n\nprototypeAccessors$1.state.get = function () {\n  return this._rawModule.state || {}\n};\n\nprototypeAccessors$1.namespaced.get = function () {\n  return !!this._rawModule.namespaced\n};\n\nModule.prototype.addChild = function addChild (key, module) {\n  this._children[key] = module\n};\n\nModule.prototype.removeChild = function removeChild (key) {\n  delete this._children[key]\n};\n\nModule.prototype.getChild = function getChild (key) {\n  return this._children[key]\n};\n\nModule.prototype.update = function update (rawModule) {\n  this._rawModule.namespaced = rawModule.namespaced\n  if (rawModule.actions) {\n    this._rawModule.actions = rawModule.actions\n  }\n  if (rawModule.mutations) {\n    this._rawModule.mutations = rawModule.mutations\n  }\n  if (rawModule.getters) {\n    this._rawModule.getters = rawModule.getters\n  }\n};\n\nModule.prototype.forEachChild = function forEachChild (fn) {\n  forEachValue(this._children, fn)\n};\n\nModule.prototype.forEachGetter = function forEachGetter (fn) {\n  if (this._rawModule.getters) {\n    forEachValue(this._rawModule.getters, fn)\n  }\n};\n\nModule.prototype.forEachAction = function forEachAction (fn) {\n  if (this._rawModule.actions) {\n    forEachValue(this._rawModule.actions, fn)\n  }\n};\n\nModule.prototype.forEachMutation = function forEachMutation (fn) {\n  if (this._rawModule.mutations) {\n    forEachValue(this._rawModule.mutations, fn)\n  }\n};\n\nObject.defineProperties( Module.prototype, prototypeAccessors$1 );\n\nvar ModuleCollection = function ModuleCollection (rawRootModule) {\n  var this$1 = this;\n\n  // register root module (Vuex.Store options)\n  this.root = new Module(rawRootModule, false)\n\n  // register all nested modules\n  if (rawRootModule.modules) {\n    forEachValue(rawRootModule.modules, function (rawModule, key) {\n      this$1.register([key], rawModule, false)\n    })\n  }\n};\n\nModuleCollection.prototype.get = function get (path) {\n  return path.reduce(function (module, key) {\n    return module.getChild(key)\n  }, this.root)\n};\n\nModuleCollection.prototype.getNamespace = function getNamespace (path) {\n  var module = this.root\n  return path.reduce(function (namespace, key) {\n    module = module.getChild(key)\n    return namespace + (module.namespaced ? key + '/' : '')\n  }, '')\n};\n\nModuleCollection.prototype.update = function update$1 (rawRootModule) {\n  update(this.root, rawRootModule)\n};\n\nModuleCollection.prototype.register = function register (path, rawModule, runtime) {\n    var this$1 = this;\n    if ( runtime === void 0 ) runtime = true;\n\n  var parent = this.get(path.slice(0, -1))\n  var newModule = new Module(rawModule, runtime)\n  parent.addChild(path[path.length - 1], newModule)\n\n  // register nested modules\n  if (rawModule.modules) {\n    forEachValue(rawModule.modules, function (rawChildModule, key) {\n      this$1.register(path.concat(key), rawChildModule, runtime)\n    })\n  }\n};\n\nModuleCollection.prototype.unregister = function unregister (path) {\n  var parent = this.get(path.slice(0, -1))\n  var key = path[path.length - 1]\n  if (!parent.getChild(key).runtime) { return }\n\n  parent.removeChild(key)\n};\n\nfunction update (targetModule, newModule) {\n  // update target module\n  targetModule.update(newModule)\n\n  // update nested modules\n  if (newModule.modules) {\n    for (var key in newModule.modules) {\n      if (!targetModule.getChild(key)) {\n        console.warn(\n          \"[vuex] trying to add a new module '\" + key + \"' on hot reloading, \" +\n          'manual reload is needed'\n        )\n        return\n      }\n      update(targetModule.getChild(key), newModule.modules[key])\n    }\n  }\n}\n\nvar Vue // bind on install\n\nvar Store = function Store (options) {\n  var this$1 = this;\n  if ( options === void 0 ) options = {};\n\n  assert(Vue, \"must call Vue.use(Vuex) before creating a store instance.\")\n  assert(typeof Promise !== 'undefined', \"vuex requires a Promise polyfill in this browser.\")\n\n  var state = options.state; if ( state === void 0 ) state = {};\n  var plugins = options.plugins; if ( plugins === void 0 ) plugins = [];\n  var strict = options.strict; if ( strict === void 0 ) strict = false;\n\n  // store internal state\n  this._committing = false\n  this._actions = Object.create(null)\n  this._mutations = Object.create(null)\n  this._wrappedGetters = Object.create(null)\n  this._modules = new ModuleCollection(options)\n  this._modulesNamespaceMap = Object.create(null)\n  this._subscribers = []\n  this._watcherVM = new Vue()\n\n  // bind commit and dispatch to self\n  var store = this\n  var ref = this;\n  var dispatch = ref.dispatch;\n  var commit = ref.commit;\n    this.dispatch = function boundDispatch (type, payload) {\n    return dispatch.call(store, type, payload)\n  }\n  this.commit = function boundCommit (type, payload, options) {\n    return commit.call(store, type, payload, options)\n    }\n\n    // strict mode\n  this.strict = strict\n\n  // init root module.\n  // this also recursively registers all sub-modules\n  // and collects all module getters inside this._wrappedGetters\n  installModule(this, state, [], this._modules.root)\n\n  // initialize the store vm, which is responsible for the reactivity\n  // (also registers _wrappedGetters as computed properties)\n  resetStoreVM(this, state)\n\n  // apply plugins\n  plugins.concat(devtoolPlugin).forEach(function (plugin) { return plugin(this$1); })\n};\n\nvar prototypeAccessors = { state: {} };\n\nprototypeAccessors.state.get = function () {\n  return this._vm.$data.state\n};\n\nprototypeAccessors.state.set = function (v) {\n  assert(false, \"Use store.replaceState() to explicit replace store state.\")\n};\n\nStore.prototype.commit = function commit (_type, _payload, _options) {\n    var this$1 = this;\n\n  // check object-style commit\n  var ref = unifyObjectStyle(_type, _payload, _options);\n    var type = ref.type;\n    var payload = ref.payload;\n    var options = ref.options;\n\n  var mutation = { type: type, payload: payload }\n  var entry = this._mutations[type]\n  if (!entry) {\n    console.error((\"[vuex] unknown mutation type: \" + type))\n    return\n  }\n  this._withCommit(function () {\n    entry.forEach(function commitIterator (handler) {\n      handler(payload)\n    })\n  })\n  this._subscribers.forEach(function (sub) { return sub(mutation, this$1.state); })\n\n  if (options && options.silent) {\n    console.warn(\n      \"[vuex] mutation type: \" + type + \". Silent option has been removed. \" +\n      'Use the filter functionality in the vue-devtools'\n    )\n  }\n};\n\nStore.prototype.dispatch = function dispatch (_type, _payload) {\n  // check object-style dispatch\n  var ref = unifyObjectStyle(_type, _payload);\n    var type = ref.type;\n    var payload = ref.payload;\n\n  var entry = this._actions[type]\n  if (!entry) {\n    console.error((\"[vuex] unknown action type: \" + type))\n    return\n  }\n  return entry.length > 1\n    ? Promise.all(entry.map(function (handler) { return handler(payload); }))\n    : entry[0](payload)\n};\n\nStore.prototype.subscribe = function subscribe (fn) {\n  var subs = this._subscribers\n  if (subs.indexOf(fn) < 0) {\n    subs.push(fn)\n  }\n  return function () {\n    var i = subs.indexOf(fn)\n    if (i > -1) {\n      subs.splice(i, 1)\n    }\n  }\n};\n\nStore.prototype.watch = function watch (getter, cb, options) {\n    var this$1 = this;\n\n  assert(typeof getter === 'function', \"store.watch only accepts a function.\")\n  return this._watcherVM.$watch(function () { return getter(this$1.state, this$1.getters); }, cb, options)\n};\n\nStore.prototype.replaceState = function replaceState (state) {\n    var this$1 = this;\n\n  this._withCommit(function () {\n    this$1._vm.state = state\n  })\n};\n\nStore.prototype.registerModule = function registerModule (path, rawModule) {\n  if (typeof path === 'string') { path = [path] }\n  assert(Array.isArray(path), \"module path must be a string or an Array.\")\n  this._modules.register(path, rawModule)\n  installModule(this, this.state, path, this._modules.get(path))\n  // reset store to update getters...\n  resetStoreVM(this, this.state)\n};\n\nStore.prototype.unregisterModule = function unregisterModule (path) {\n    var this$1 = this;\n\n  if (typeof path === 'string') { path = [path] }\n  assert(Array.isArray(path), \"module path must be a string or an Array.\")\n    this._modules.unregister(path)\n  this._withCommit(function () {\n    var parentState = getNestedState(this$1.state, path.slice(0, -1))\n    Vue.delete(parentState, path[path.length - 1])\n  })\n  resetStore(this)\n};\n\nStore.prototype.hotUpdate = function hotUpdate (newOptions) {\n  this._modules.update(newOptions)\n  resetStore(this)\n};\n\nStore.prototype._withCommit = function _withCommit (fn) {\n  var committing = this._committing\n  this._committing = true\n  fn()\n  this._committing = committing\n};\n\nObject.defineProperties( Store.prototype, prototypeAccessors );\n\nfunction resetStore (store) {\n  store._actions = Object.create(null)\n  store._mutations = Object.create(null)\n  store._wrappedGetters = Object.create(null)\n  store._modulesNamespaceMap = Object.create(null)\n  var state = store.state\n  // init all modules\n  installModule(store, state, [], store._modules.root, true)\n  // reset vm\n  resetStoreVM(store, state)\n}\n\nfunction resetStoreVM (store, state) {\n  var oldVm = store._vm\n\n  // bind store public getters\n  store.getters = {}\n  var wrappedGetters = store._wrappedGetters\n  var computed = {}\n  forEachValue(wrappedGetters, function (fn, key) {\n    // use computed to leverage its lazy-caching mechanism\n    computed[key] = function () { return fn(store); }\n    Object.defineProperty(store.getters, key, {\n      get: function () { return store._vm[key]; },\n      enumerable: true // for local getters\n    })\n  })\n\n  // use a Vue instance to store the state tree\n  // suppress warnings just in case the user has added\n  // some funky global mixins\n  var silent = Vue.config.silent\n  Vue.config.silent = true\n  store._vm = new Vue({\n    data: { state: state },\n    computed: computed\n  })\n  Vue.config.silent = silent\n\n  // enable strict mode for new vm\n  if (store.strict) {\n    enableStrictMode(store)\n  }\n\n  if (oldVm) {\n    // dispatch changes in all subscribed watchers\n    // to force getter re-evaluation.\n    store._withCommit(function () {\n      oldVm.state = null\n    })\n    Vue.nextTick(function () { return oldVm.$destroy(); })\n  }\n}\n\nfunction installModule (store, rootState, path, module, hot) {\n  var isRoot = !path.length\n  var namespace = store._modules.getNamespace(path)\n\n  // register in namespace map\n  if (namespace) {\n    store._modulesNamespaceMap[namespace] = module\n  }\n\n  // set state\n  if (!isRoot && !hot) {\n    var parentState = getNestedState(rootState, path.slice(0, -1))\n    var moduleName = path[path.length - 1]\n    store._withCommit(function () {\n      Vue.set(parentState, moduleName, module.state)\n    })\n  }\n\n  var local = module.context = makeLocalContext(store, namespace)\n\n  module.forEachMutation(function (mutation, key) {\n    var namespacedType = namespace + key\n    registerMutation(store, namespacedType, mutation, path)\n  })\n\n  module.forEachAction(function (action, key) {\n    var namespacedType = namespace + key\n    registerAction(store, namespacedType, action, local, path)\n  })\n\n  module.forEachGetter(function (getter, key) {\n    var namespacedType = namespace + key\n    registerGetter(store, namespacedType, getter, local, path)\n  })\n\n  module.forEachChild(function (child, key) {\n    installModule(store, rootState, path.concat(key), child, hot)\n  })\n}\n\n/**\n * make localized dispatch, commit and getters\n * if there is no namespace, just use root ones\n */\nfunction makeLocalContext (store, namespace) {\n  var noNamespace = namespace === ''\n\n  var local = {\n    dispatch: noNamespace ? store.dispatch : function (_type, _payload, _options) {\n      var args = unifyObjectStyle(_type, _payload, _options)\n      var payload = args.payload;\n      var options = args.options;\n      var type = args.type;\n\n      if (!options || !options.root) {\n        type = namespace + type\n        if (!store._actions[type]) {\n          console.error((\"[vuex] unknown local action type: \" + (args.type) + \", global type: \" + type))\n          return\n        }\n      }\n\n      return store.dispatch(type, payload)\n    },\n\n    commit: noNamespace ? store.commit : function (_type, _payload, _options) {\n      var args = unifyObjectStyle(_type, _payload, _options)\n      var payload = args.payload;\n      var options = args.options;\n      var type = args.type;\n\n      if (!options || !options.root) {\n        type = namespace + type\n        if (!store._mutations[type]) {\n          console.error((\"[vuex] unknown local mutation type: \" + (args.type) + \", global type: \" + type))\n          return\n        }\n      }\n\n      store.commit(type, payload, options)\n    }\n  }\n\n  // getters object must be gotten lazily\n  // because store.getters will be changed by vm update\n  Object.defineProperty(local, 'getters', {\n    get: noNamespace ? function () { return store.getters; } : function () { return makeLocalGetters(store, namespace); }\n  })\n\n  return local\n}\n\nfunction makeLocalGetters (store, namespace) {\n  var gettersProxy = {}\n\n  var splitPos = namespace.length\n  Object.keys(store.getters).forEach(function (type) {\n    // skip if the target getter is not match this namespace\n    if (type.slice(0, splitPos) !== namespace) { return }\n\n    // extract local getter type\n    var localType = type.slice(splitPos)\n\n    // Add a port to the getters proxy.\n    // Define as getter property because\n    // we do not want to evaluate the getters in this time.\n    Object.defineProperty(gettersProxy, localType, {\n      get: function () { return store.getters[type]; },\n      enumerable: true\n    })\n  })\n\n  return gettersProxy\n}\n\nfunction registerMutation (store, type, handler, path) {\n  var entry = store._mutations[type] || (store._mutations[type] = [])\n  entry.push(function wrappedMutationHandler (payload) {\n    handler(getNestedState(store.state, path), payload)\n  })\n}\n\nfunction registerAction (store, type, handler, local, path) {\n  var entry = store._actions[type] || (store._actions[type] = [])\n  entry.push(function wrappedActionHandler (payload, cb) {\n    var res = handler({\n      dispatch: local.dispatch,\n      commit: local.commit,\n      getters: local.getters,\n      state: getNestedState(store.state, path),\n      rootGetters: store.getters,\n      rootState: store.state\n    }, payload, cb)\n    if (!isPromise(res)) {\n      res = Promise.resolve(res)\n    }\n    if (store._devtoolHook) {\n      return res.catch(function (err) {\n        store._devtoolHook.emit('vuex:error', err)\n        throw err\n      })\n    } else {\n      return res\n    }\n  })\n}\n\nfunction registerGetter (store, type, rawGetter, local, path) {\n  if (store._wrappedGetters[type]) {\n    console.error((\"[vuex] duplicate getter key: \" + type))\n    return\n  }\n  store._wrappedGetters[type] = function wrappedGetter (store) {\n    return rawGetter(\n      getNestedState(store.state, path), // local state\n      local.getters, // local getters\n      store.state, // root state\n      store.getters // root getters\n    )\n  }\n}\n\nfunction enableStrictMode (store) {\n  store._vm.$watch('state', function () {\n    assert(store._committing, \"Do not mutate vuex store state outside mutation handlers.\")\n  }, { deep: true, sync: true })\n}\n\nfunction getNestedState (state, path) {\n  return path.length\n    ? path.reduce(function (state, key) { return state[key]; }, state)\n    : state\n}\n\nfunction unifyObjectStyle (type, payload, options) {\n  if (isObject(type) && type.type) {\n    options = payload\n    payload = type\n    type = type.type\n  }\n  return { type: type, payload: payload, options: options }\n}\n\nfunction install (_Vue) {\n  if (Vue) {\n    console.error(\n      '[vuex] already installed. Vue.use(Vuex) should be called only once.'\n    )\n    return\n  }\n  Vue = _Vue\n  applyMixin(Vue)\n}\n\n// auto install in dist mode\nif (typeof window !== 'undefined' && window.Vue) {\n  install(window.Vue)\n}\n\nvar index = {\n  Store: Store,\n  install: install,\n  version: '2.1.1',\n  mapState: mapState,\n  mapMutations: mapMutations,\n  mapGetters: mapGetters,\n  mapActions: mapActions\n}\n\nreturn index;\n\n})));\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/ioiogoo/~/.2.1.1@vuex/dist/vuex.js\n// module id = 1\n// module chunks = 1","var __vue_exports__, __vue_options__\nvar __vue_styles__ = {}\n\n/* styles */\nrequire(\"!!./../node_modules/.1.0.1@extract-text-webpack-plugin/loader.js?{\\\"omit\\\":1,\\\"extract\\\":true,\\\"remove\\\":true}!vue-style-loader!css-loader?sourceMap!vue-loader/lib/style-rewriter?id=data-v-115d9f50!vue-loader/lib/selector?type=styles&index=0!./App.vue\")\n\n/* script */\n__vue_exports__ = require(\"!!babel-loader!vue-loader/lib/selector?type=script&index=0!./App.vue\")\n\n/* template */\nvar __vue_template__ = require(\"!!vue-loader/lib/template-compiler?id=data-v-115d9f50!vue-loader/lib/selector?type=template&index=0!./App.vue\")\n__vue_options__ = __vue_exports__ = __vue_exports__ || {}\nif (\n  typeof __vue_exports__.default === \"object\" ||\n  typeof __vue_exports__.default === \"function\"\n) {\n__vue_options__ = __vue_exports__ = __vue_exports__.default\n}\nif (typeof __vue_options__ === \"function\") {\n  __vue_options__ = __vue_options__.options\n}\n\n__vue_options__.render = __vue_template__.render\n__vue_options__.staticRenderFns = __vue_template__.staticRenderFns\n\nmodule.exports = __vue_exports__\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/App.vue\n// module id = 3\n// module chunks = 1","module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', {\n    attrs: {\n      \"id\": \"app\"\n    }\n  }, [_c('h1', [_vm._v(\"Vue News\")]), _vm._v(\" \"), _c('ul', _vm._l((_vm.news), function(n) {\n    return _c('li', [_vm._v(_vm._s(n.title))])\n  })), _vm._v(\" \"), _c('button', {\n    on: {\n      \"click\": _vm.change\n    }\n  }, [_vm._v(\"click\")])])\n},staticRenderFns: []}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.10.0.2@vue-loader/lib/template-compiler.js?id=data-v-115d9f50!./~/.10.0.2@vue-loader/lib/selector.js?type=template&index=0!./src/App.vue\n// module id = 4\n// module chunks = 1","<template>\n  <div id=\"app\">\n    <h1>Vue News</h1>\n    <ul>\n      <li v-for='n in news'>{{n.title}}</li>\n    </ul>\n    <button @click='change'>click</button>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'app',\n  methods: {\n    change () {\n      this.$store.dispatch('getNews', {'name': 'hacker'})\n    }\n  },\n  computed: {\n    news () {\n      return this.$store.news\n    }\n  }\n}\n</script>\n\n<style>\n\n</style>\n\n\n\n// WEBPACK FOOTER //\n// App.vue?7ef5cc50"],"sourceRoot":""}